"""Example JSON input."""
# flake8: noqa

ex_1_json = """
{
   "components":{
      "schemas":{
         "Eiendom":{
            "properties":{
               "erstatter":{
                  "type":"string"
               },
               "erstattetav":{
                  "type":"string"
               },
               "id":{
                  "type":"string"
               },
               "nummer":{
                  "type":"string"
               },
               "type":{
                  "type":"string"
               }
            },
            "required":[
               "id",
               "nummer",
               "type"
            ],
            "type":"object"
         }
      }
   }
}
"""

ex_2_json = """
{
   "components":{
      "schemas":{
         "EiendomResultat": {
                "properties": {
                    "code": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Eiendom",
                        "required": [
                            "kommune"
                        ],
                        "type": "object"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "data",
                    "message"
                ],
                "type": "object"
            },
        "Eiendom":{
            "properties":{
               "erstatter":{
                  "type":"string"
               },
               "erstattetav":{
                  "type":"string"
               },
               "id":{
                  "type":"string"
               },
               "nummer":{
                  "type":"string"
               },
               "type":{
                  "type":"string"
               }
            },
            "required":[
               "id",
               "nummer",
               "type"
            ],
            "type":"object"
         }
      }
   }
}
"""

ex_3_json = """
{
   "components":{
      "schemas":{
         "SÃ¸k":{
            "properties":{
               "code":{
                  "format":"int32",
                  "type":"integer"
               },
               "data":{
                  "items":{
                     "oneOf":[
                        {
                           "$ref":"#/components/schemas/Eiendom"
                        },
                        {
                           "$ref":"#/components/schemas/Kommune"
                        }
                     ]
                  },
                  "type":"array"
               },
               "message":{
                  "type":"string"
               }
            },
            "required":[
               "code",
               "data",
               "message"
            ],
            "type":"object"
         },
         "Eiendom":{
            "properties":{
               "erstatter":{
                  "type":"string"
               },
               "erstattetav":{
                  "type":"string"
               },
               "id":{
                  "type":"string"
               },
               "nummer":{
                  "type":"string"
               },
               "type":{
                  "type":"string"
               }
            },
            "required":[
               "id",
               "nummer",
               "type"
            ],
            "type":"object"
         },
         "Kommune":{
            "properties":{
               "fylke":{
                  "type":"string"
               },
               "gyldigtil":{
                  "format":"date",
                  "type":"string"
               },
               "id":{
                  "type":"string"
               },
               "navn":{
                  "type":"string"
               },
               "type":{
                  "type":"string"
               }
            },
            "required":[
               "fylke",
               "id",
               "navn",
               "type"
            ],
            "type":"object"
         }
      }
   }
}
"""

ex_4_json = """
{
  "components":{
     "schemas":{
        "Eiendom":{
           "properties":{
              "erstatter":{
                 "type":"string"
              },
              "erstattetav":{
                 "type":"string"
              },
              "id":{
                 "type":"string"
              },
              "nummer":{
                 "type":"string"
              },
              "type":{
                 "type":"string"
              }
           },
           "required":[
              "id",
              "nummer",
              "type"
           ],
           "type":"object"
        },
        "Kommune":{
           "properties":{
              "fylke":{
                 "type":"string"
              },
              "gyldigtil":{
                 "format":"date",
                 "type":"string"
              },
              "id":{
                 "type":"string"
              },
              "navn":{
                 "type":"string"
              },
              "type":{
                 "type":"string"
              }
           },
           "required":[
              "fylke",
              "id",
              "navn",
              "type"
           ],
           "type":"object"
        },
        "EiendomResultat":{
           "properties":{
              "code":{
                 "format":"int32",
                 "type":"integer"
              },
              "data":{
                 "$ref":"#/components/schemas/Eiendom",
                 "required":[
                    "kommune"
                 ],
                 "type":"object"
              },
              "message":{
                 "type":"string"
              }
           },
           "required":[
              "code",
              "data",
              "message"
           ],
           "type":"object"
        },
        "KommuneResultat":{
           "properties":{
              "code":{
                 "format":"int32",
                 "type":"integer"
              },
              "data":{
                 "properties":{
                    "erstatter":{
                       "items":{
                          "$ref":"#/components/schemas/Kommune"
                       },
                       "type":"array"
                    },
                    "erstattetav":{
                       "items":{
                          "type": "object",
                          "properties": {
                               "id":{
                                   "type":"integer"
                               }
                          }
                       },
                       "type":"array"
                    },
                    "kommune":{
                       "$ref":"#/components/schemas/Kommune",
                       "type":"object"
                    }
                 },
                 "required":[
                    "kommune"
                 ],
                 "type":"object"
              },
              "message":{
                 "type":"string"
              }
           },
           "required":[
              "code",
              "data",
              "message"
           ],
           "type":"object"
        },
        "Søk":{
           "properties":{
              "code":{
                 "format":"int32",
                 "type":"integer"
              },
              "data":{
                 "items":{
                    "oneOf":[
                       {
                          "$ref":"#/components/schemas/Eiendom"
                       },
                       {
                          "$ref":"#/components/schemas/Kommune"
                       }
                    ]
                 },
                 "type":"array"
              },
              "message":{
                 "type":"string"
              }
           },
           "required":[
              "code",
              "data",
              "message"
           ],
           "type":"object"
        }
     }
  }
}
"""

ex_5_json = """
{
   "components":{
      "schemas":{
         "Account":{
            "description":"Account: a specification of a clearly defined type of financial events",
            "required":[
               "accountIdentifier",
               "accountReference",
               "type",
               "status",
               "currency",
               "servicer",
               "primaryOwner"
            ],
            "type":"object",
            "properties":{
               "status":{
                  "description":"Status: indicates current account status",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/AccountStatus"
                     }
                  ]
               },
               "servicer":{
                  "description":"account administrator: financial institution that manages an account on behalf of the account owner, including handling the registration of account transactions, calculating the account balance and providing information about the account",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/FinancialInstitution"
                     }
                  ]
               },
               "number":{
                  "description":"Account number",
                  "allOf":[
                     {
                        "properties":{
                           "type":"number"
                        }
                     }
                  ]
               }
            }
         },
         "FinancialInstitution":{
            "description":"financial institution: Business or other institution involved in finance and banking",
            "required":[
               "name"
            ],
            "type":"object",
            "properties":{
               "name":{
                  "type":"string",
                  "minLength":1,
                  "maxLength":140
               }
            }
         },
         "AccountStatus":{
            "enum":[
               "enabled",
               "disabled",
               "deleted"
            ],
            "type":"string"
         }
      }
   }
}
"""


ex_6_json = """
{
   "components":{
      "schemas":{
         "ObjA":{
            "description":"Root A",
            "required":[
               "status"
            ],
            "type":"object",
            "properties":{
               "objB":{
                  "description":"b thing",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ObjC"
                     },
                     {
                        "$ref":"#/components/schemas/ObjD"
                     },
                     {
                        "$ref":"#/components/schemas/ObjE"
                     },
                     {
                        "description":"test f",
                        "type":"string"
                     }
                  ]
               }
            }
         },
         "ObjC":{
            "description":"test c",
            "type":"object"
         },
         "ObjD":{
            "description":"test d",
            "type":"object"
         },
         "ObjE":{
            "description":"test e",
            "type":"string"
         }
      }
   }
}
"""

ex_7_json = """
{
   "components":{
      "schemas":{
         "Balance":{
            "description":"Balance: Sum of deposits and loans in the financial account",
            "required":[
               "type",
               "creditLineIncluded",
               "amount",
               "currency",
               "creditDebitIndicator",
               "registered"
            ],
            "type":"object",
            "properties":{
               "creditLineIncluded":{
                  "description":"Balance included credit limit: Indicates whether the credit limit is included in the balance or not. Should always be false",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/TrueFalseIndicator"
                     }
                  ]
               },
               "amount":{
                  "description":"A sum of money spent in a context. This can be a transaction, balance etc.",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/Amount"
                     }
                  ]
               },
               "creditDebitIndicator":{
                  "description":"Credit is positive balance, debit is negative balance",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/CreditOrDebit"
                     }
                  ]
               },
               "registered":{
                  "description":"registration date: the current date and time of the reported balance",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ISODateTime"
                     }
                  ]
               },
               "type":{
                  "$ref":"#/components/schemas/BalanceType"
               },
               "creditLineAmount":{
                  "$ref":"#/components/schemas/Amount"
               },
               "creditLineCurrency":{
                  "$ref":"#/components/schemas/CurrencyCode"
               },
               "currency":{
                  "$ref":"#/components/schemas/CurrencyCode"
               }
            }
         },
         "BalanceType":{
            "description":"Balance type",
            "enum":[
               "availableBalance",
               "bookedBalance"
            ],
            "type":"string"
         }
      }
   }
}
"""

ex_8_json = """
{
   "components":{
      "schemas":{
         "Transaction":{
            "description":"Transaction: any posting on an account",
            "required":[
               "transactionIdentifier",
               "amount",
               "currency",
               "creditDebitIndicator",
               "status",
               "transactionCode",
               "bookingDate",
               "valueDate"
            ],
            "type":"object",
            "properties":{
               "transactionIdentifier":{
                  "description":"Transaction Identifier: The identifier for the transaction",
                  "type":"string",
                  "minLength":0,
                  "maxLength":35
               },
               "references":{
                  "type":"array",
                  "items":{
                     "description":"Transaction reference: unique reference associated with the transaction",
                     "allOf":[
                        {
                           "$ref":"#/components/schemas/TransactionReference"
                        }
                     ]
                  },
                  "minItems":0
               },
               "creditDebitIndicator":{
                  "description":"Credit is positive balance debited is negative balance",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/CreditOrDebit"
                     }
                  ]
               },
               "reversalIndicator":{
                  "description":"Corrected transaction indicator: Indicates whether the transaction is a correction of a previous transaction",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/TrueFalseIndicator"
                     }
                  ]
               },
               "status":{
                  "description":"transaction status: indicates the status of the transaction",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/TransactionStatus"
                     }
                  ]
               },
               "transactionCode":{
                  "description":"Transaction code: contains a set of indicators to identify the type of transaction",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/BankTransactionCode"
                     }
                  ]
               },
               "bookingDate":{
                  "description":"Posting date: The date when the posting of the transaction is conducted by the financial institution",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ISODateTime"
                     }
                  ]
               },
               "valueDate":{
                  "description":"Interest date: date when the transaction posting is interest-bearing",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ISODateTime"
                     }
                  ]
               },
               "counterParties":{
                  "type":"array",
                  "items":{
                     "description":"Counterparty: another party, the party to whom a transaction is going or coming from",
                     "allOf":[
                        {
                           "$ref":"#/components/schemas/CounterParty"
                        }
                     ]
                  },
                  "minItems":0
               },
               "additionalInfo":{
                  "description":"'Additional information on a transaction: textual description of the contents of a transaction'",
                  "type":"string",
                  "minLength":1,
                  "maxLength":500
               },
               "currencyExchange":{
                  "description":"Currency conversion: conversion of an amount from one currency to another",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/CurrencyExchange"
                     }
                  ]
               },
               "merchant":{
                  "description":"User location: the physical location of the transaction",
                  "type":"string",
                  "minLength":1,
                  "maxLength":140
               },
               "paymentCard":{
                  "description":"Payment Cards: The common term for various types of cards used for cash withdrawals and for the payment of goods and services at different point of sales",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/PaymentCard"
                     }
                  ]
               },
               "registered":{
                  "description":"registration date: date and time when transaction was made",
                  "allOf":[
                     {
                        "$ref":"#/components/schemas/ISODateTime"
                     }
                  ]
               },
               "amount":{
                  "$ref":"#/components/schemas/Amount"
               },
               "currency":{
                  "$ref":"#/components/schemas/CurrencyCode"
               }
            }
         },
         "Amount":{
            "description":"Amount, always as positive value. CreditDebitIndicator should be used to indicate whether the amount is positive or negative.",
            "type":"number",
            "minimum":0,
            "exclusiveMinimum":false
         }
      }
   }
}
"""
